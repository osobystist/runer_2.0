-- go.property('speed', 360)

local grid = 460
local platform_heights = { 100, 200, 350 }
local coins = 3

function init(self)
	-- msg.post("ground/controller#ground", "set_speed", { speed = self.speed })
	self.gridw = 0
	self.spawns = {}
end


function update(self, dt)
	self.gridw = self.gridw + self.speed * dt

	if self.gridw >= grid then
		self.gridw = 0
		if math.random() > 0.2 then
			local h = platform_heights[math.random(#platform_heights)]
			-- в цьому коді обирається число випадкове яке буде індесом для масива platform_heights і за цим індексом оберетьчся 
			--певне число з масива у випадковому порядку.
			local f = '#platform_factory'
			local coins = coins
			coins = coins * 2
				if math.random() > 0.5 then
					f = '#platform_long_factory'
					coins = coins				
				end
		
		local p = factory.create(f, vmath.vector3(1600, h, 0), nil, {}, 0.6)
		-- msg.post(p, 'set_speed', {speed = self.speed} )
		table.insert(self.spawns, p)
		-- msg.post(p, "set_speed", { speed = self.speed })
		msg.post(p, "create_coins", { coins = coins })
		table.insert(self.spawns, p)
		end
	end
end


function on_message(self, message_id, message, sender)
	if message_id == hash('reset') then
		msg.post('hero#hero', 'reset')
		for i, p in ipairs(self.spawns) do
			if go.exists(p) then
				go.delete(p)
			end
		end
		self.spawns = {}
	elseif message_id == hash('delete_spawn') then
		for i, p in ipairs(self.spawns) do
			if p == message.id then
				table.remove(self.spawns, i)
				go.delete(p)
			end
		end
	end
	function on_message(self, message_id, message, sender)
		if message_id == hash("set_speed") then -- <1>
			self.speed = message.speed -- <2>
		end
	end
end

